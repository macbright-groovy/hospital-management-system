# Generated by Django 5.2.3 on 2025-06-15 15:46

import django.core.validators
import django.db.models.deletion
import django.utils.timezone
from django.conf import settings
from django.db import migrations, models


class Migration(migrations.Migration):

    dependencies = [
        ('prescriptions', '0001_initial'),
        migrations.swappable_dependency(settings.AUTH_USER_MODEL),
    ]

    operations = [
        migrations.CreateModel(
            name='Medication',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=255, unique=True)),
                ('generic_name', models.CharField(blank=True, max_length=255)),
                ('description', models.TextField()),
                ('dosage_forms', models.CharField(help_text='Available forms (e.g., tablet, capsule, liquid)', max_length=100)),
                ('strength', models.CharField(help_text='Available strengths (e.g., 500mg, 10mg/ml)', max_length=100)),
                ('is_active', models.BooleanField(default=True)),
                ('requires_prescription', models.BooleanField(default=True)),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('updated_at', models.DateTimeField(auto_now=True)),
            ],
            options={
                'ordering': ['name'],
            },
        ),
        migrations.AlterModelOptions(
            name='prescription',
            options={'ordering': ['-date_prescribed', 'priority'], 'permissions': [('can_prescribe_medication', 'Can prescribe medication'), ('can_request_refill', 'Can request prescription refill'), ('can_approve_refill', 'Can approve prescription refill')]},
        ),
        migrations.RemoveField(
            model_name='prescription',
            name='medication_name',
        ),
        migrations.AddField(
            model_name='prescription',
            name='duration',
            field=models.IntegerField(default=7, help_text='Duration in days'),
        ),
        migrations.AddField(
            model_name='prescription',
            name='end_date',
            field=models.DateField(blank=True, help_text='When the prescription expires', null=True),
        ),
        migrations.AddField(
            model_name='prescription',
            name='frequency',
            field=models.CharField(default='Once daily', help_text='Frequency (e.g., twice daily, every 8 hours)', max_length=100),
        ),
        migrations.AddField(
            model_name='prescription',
            name='is_urgent',
            field=models.BooleanField(default=False),
        ),
        migrations.AddField(
            model_name='prescription',
            name='priority',
            field=models.IntegerField(default=1, help_text='Priority level from 1 (lowest) to 5 (highest)', validators=[django.core.validators.MinValueValidator(1), django.core.validators.MaxValueValidator(5)]),
        ),
        migrations.AddField(
            model_name='prescription',
            name='refills_remaining',
            field=models.IntegerField(default=0, help_text='Number of refills remaining (0-12)', validators=[django.core.validators.MinValueValidator(0), django.core.validators.MaxValueValidator(12)]),
        ),
        migrations.AddField(
            model_name='prescription',
            name='start_date',
            field=models.DateField(blank=True, default=django.utils.timezone.now, help_text='When the patient should start taking the medication', null=True),
        ),
        migrations.AddField(
            model_name='prescription',
            name='status',
            field=models.CharField(choices=[('ACTIVE', 'Active'), ('COMPLETED', 'Completed'), ('CANCELLED', 'Cancelled'), ('EXPIRED', 'Expired')], default='ACTIVE', max_length=20),
        ),
        migrations.AlterField(
            model_name='prescription',
            name='date_prescribed',
            field=models.DateTimeField(auto_now_add=True),
        ),
        migrations.AlterField(
            model_name='prescription',
            name='doctor',
            field=models.ForeignKey(limit_choices_to={'role': 'DOCTOR'}, null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='prescriptions_as_doctor', to=settings.AUTH_USER_MODEL),
        ),
        migrations.AlterField(
            model_name='prescription',
            name='dosage',
            field=models.CharField(help_text='Dosage information (e.g., 1 tablet, 2 teaspoons)', max_length=100),
        ),
        migrations.AddField(
            model_name='prescription',
            name='medication',
            field=models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.PROTECT, to='prescriptions.medication'),
        ),
        migrations.CreateModel(
            name='PrescriptionRefill',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('status', models.CharField(choices=[('PENDING', 'Pending'), ('APPROVED', 'Approved'), ('REJECTED', 'Rejected'), ('COMPLETED', 'Completed')], default='PENDING', max_length=20)),
                ('request_date', models.DateTimeField(auto_now_add=True)),
                ('approval_date', models.DateTimeField(blank=True, null=True)),
                ('completion_date', models.DateTimeField(blank=True, null=True)),
                ('notes', models.TextField(blank=True)),
                ('is_urgent', models.BooleanField(default=False)),
                ('approved_by', models.ForeignKey(blank=True, limit_choices_to={'role': 'DOCTOR'}, null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='approved_refills', to=settings.AUTH_USER_MODEL)),
                ('prescription', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='refills', to='prescriptions.prescription')),
                ('requested_by', models.ForeignKey(limit_choices_to={'role': 'PATIENT'}, null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='refill_requests', to=settings.AUTH_USER_MODEL)),
            ],
            options={
                'ordering': ['-request_date'],
                'permissions': [('can_request_refill', 'Can request prescription refill'), ('can_approve_refill', 'Can approve prescription refill')],
            },
        ),
    ]
